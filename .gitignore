# OS generated files #
######################
.DS_Store
__MACOSX

# Jupiter Notebook #
.pytest_cache
__pycache__
*checkpoint.ipynb
*.ipynb_checkpoints
/notebooks
#Raw Data
/raw_data

# inteliJ #
.idea
*.gz
*PKG-INFO
*.egg-info
*.csv
*.zip
mlruns
*.sqlite
# IDE #
*.vscode
.installed.cfg
*.egg
MANIFEST

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Flask stuff:
instance/
.webassets-cache

# PyBuilder
.pybuilder/
target/

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock


# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
